//flood fill Algorithm
void dfs(vector<vector<int>>& image, int sr, int sc, int newColor,vector<vector<bool>>&visited)
    {
        int m = image.size();
        int n = image[0].size();
        visited[sr][sc] = true;
        if((sr + 1 < m) && image[sr][sc] == image[sr+1][sc]&&visited[sr+1][sc] == false)
        {
            visited[sr+1][sc]=true;
            dfs(image,sr+1,sc,newColor,visited);
        }
        if((sc + 1 < n) && image[sr][sc] == image[sr][sc + 1]&&visited[sr][sc+1] == false)
        {
            visited[sr][sc+1] = true;
            dfs(image,sr,sc+1,newColor,visited); 
        }
        if((sr - 1 >= 0) && image[sr][sc] == image[sr-1][sc]&&visited[sr-1][sc] == false)
        {
            visited[sr-1][sc] = true;
            dfs(image,sr-1,sc,newColor,visited);
        }
        if((sc - 1 >= 0) && image[sr][sc] == image[sr][sc-1]&&visited[sr][sc-1] == false)
        {
            visited[sr][sc-1] = true;
            dfs(image,sr,sc-1,newColor,visited);
        }
        image[sr][sc] = newColor;
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) 
    {
        int m = image.size();
        int n = image[0].size();
        vector<vector<bool>>visited(m,vector<bool>(n,0));
        dfs(image,sr,sc,newColor,visited);
        return image;
    }
    
